// Generated by CoffeeScript 1.9.1
(function() {
  var draw, offsetX, offsetY, scale, writeText;

  submit_login.disabled = false;

  text_login.readOnly = false;

  form_login.onsubmit = function(event) {
    var socket;
    event.preventDefault();
    submit_login.disabled = true;
    text_login.readOnly = true;
    socket = io.connect();
    socket.emit("login", text_login.value);
    socket.on("disconnect", function() {
      writeText("[[[ disconnect ]]]");
    });
    socket.on("set name", function(name) {
      text_login.value = name;
    });
    socket.on("draw", draw);
    socket.on("message", writeText);
    canvas.onclick = function(event) {
      var x, y;
      x = Math.floor((event.clientX - offsetX) / scale);
      y = Math.floor((event.clientY - offsetY) / scale);
      socket.emit("click", x, y);
    };
    button_entry.onclick = function(event) {
      socket.emit("entry");
    };
    button_reset.onclick = function(event) {
      socket.emit("reset");
    };
    form_chat.onsubmit = function(event) {
      event.preventDefault();
      socket.emit("chat", text_chat.value);
      text_chat.value = "";
    };
  };

  scale = offsetX = offsetY = null;

  draw = function(size, board) {
    var context, i, j, k, l, ref, ref1, ref2, x, y;
    canvas.width = canvas.clientWidth;
    canvas.height = canvas.clientHeight;
    scale = Math.floor(Math.min(canvas.width, canvas.height) / (size + 1));
    offsetX = Math.floor((canvas.width - size * scale) / 2);
    offsetY = Math.floor((canvas.height - size * scale) / 2);
    context = canvas.getContext("2d");
    context.setTransform(scale, 0, 0, scale, offsetX, offsetY);
    context.fillStyle = "#afa";
    context.fillRect(0, 0, size, size);
    context.beginPath();
    context.rect(0, 0, size, size);
    for (i = j = 1, ref = size; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
      context.moveTo(i, 0);
      context.lineTo(i, size);
      context.moveTo(0, i);
      context.lineTo(size, i);
    }
    context.lineJoin = "round";
    context.lineWidth = 0.01;
    context.strokeStyle = "#5a5";
    context.stroke();
    for (x = k = 0, ref1 = size; 0 <= ref1 ? k < ref1 : k > ref1; x = 0 <= ref1 ? ++k : --k) {
      for (y = l = 0, ref2 = size; 0 <= ref2 ? l < ref2 : l > ref2; y = 0 <= ref2 ? ++l : --l) {
        switch (board[x][y]) {
          case "black":
            context.beginPath();
            context.arc(x + 1 / 2, y + 1 / 2, 0.4, 0, 2 * Math.PI);
            context.fillStyle = "#000";
            context.fill();
            break;
          case "white":
            context.beginPath();
            context.arc(x + 1 / 2, y + 1 / 2, 0.4, 0, 2 * Math.PI);
            context.fillStyle = "#fff";
            context.fill();
            context.strokeStyle = "#000";
            context.stroke();
        }
      }
    }
    window.onresize = function() {
      draw(size, board);
    };
  };

  writeText = function(text) {
    div_stdout.appendChild(document.createTextNode(text));
    div_stdout.appendChild(document.createElement("br"));
    div_stdout.scrollTop = div_stdout.scrollHeight;
  };

}).call(this);
